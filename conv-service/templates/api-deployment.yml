apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{.Values.api.name}}-deployment"
spec:
  replicas: {{.Values.api.replicas}}
  selector:
    matchLabels:
      components: {{.Values.api.components}}
  template:
    metadata:
      labels:
        components: {{.Values.api.components}}
    spec:
      containers:
        - name: {{.Values.api.name}}
          image: "{{.Values.api.image}}:{{.Values.api.version}}"
          ports:
            - containerPort: {{.Values.api.port}}
          resources:
            limits: {{.Values.api.limits | toYaml | nindent 14}}
          env:
          {{- range .Values.api.envs }}
          {{- $data := dict "name" $.Values.rmq.name "env" . }}
          {{- include "env.template" $data | indent 10 }}
          {{- end }}
          volumeMounts:
            - name: {{.Values.api.name}}-data
              mountPath: /opt/api/uploads
              subPath: {{.Values.api.name}}
      volumes:
        - name: {{.Values.api.name}}-data
          persistentVolumeClaim:
            claimName: {{.Values.api.name}}-pvc